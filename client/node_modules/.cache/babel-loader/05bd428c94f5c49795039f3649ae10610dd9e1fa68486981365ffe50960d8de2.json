{"ast":null,"code":"var _jsxFileName = \"D:\\\\real_chat_app\\\\Chat_application\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport styled from 'styled-components';\nimport Login from './components/Login';\nimport ChatRoom from './components/ChatRoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log('Attempting to connect to:', process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000');\nconst socket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\n  reconnection: true,\n  reconnectionAttempts: 5,\n  reconnectionDelay: 1000,\n  transports: ['websocket', 'polling'],\n  autoConnect: true,\n  debug: true\n});\nsocket.on('error', error => {\n  console.error('Socket Error:', error);\n});\nsocket.on('connect_error', error => {\n  console.error('Connection Error:', error);\n});\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [connectionError, setConnectionError] = useState(false);\n  const [loginError, setLoginError] = useState('');\n  const [isConnected, setIsConnected] = useState(socket.connected);\n  useEffect(() => {\n    console.log('Initial socket state:', {\n      connected: socket.connected,\n      id: socket.id\n    });\n    socket.on('connect', () => {\n      console.log('Socket connected:', socket.id);\n      setConnectionError(false);\n      setIsConnected(true);\n    });\n    socket.on('connect_error', error => {\n      console.error('Connection error:', error);\n      setConnectionError(true);\n    });\n    socket.on('loginError', error => {\n      console.log('Login error:', error);\n      setLoginError(error);\n    });\n    socket.on('loginSuccess', () => {\n      console.log('Login successful');\n      setLoggedIn(true);\n      setLoginError('');\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setLoggedIn(false);\n      setIsConnected(false);\n    });\n\n    // Initial connection status\n    setIsConnected(socket.connected);\n    return () => {\n      socket.off('connect');\n      socket.off('connect_error');\n      socket.off('loginError');\n      socket.off('loginSuccess');\n      socket.off('disconnect');\n    };\n  }, []);\n  const handleLogin = (name, password) => {\n    console.log('Login attempt:', {\n      name,\n      password\n    });\n    console.log('Socket state during login:', {\n      connected: socket.connected,\n      id: socket.id\n    });\n    if (!socket.connected) {\n      console.log('Socket not connected, attempting to connect...');\n      socket.connect();\n      setLoginError('Connecting to server...');\n      return;\n    }\n    setUsername(name);\n    socket.emit('login', {\n      username: name,\n      password\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [!isConnected && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: \"Connecting to server...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), connectionError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: \"Unable to connect to chat server. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), loginError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: loginError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), !loggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ChatRoom, {\n      socket: socket,\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ihAQ+Rw+OQtrSu+wvLDKvAKxnHs=\");\n_c = App;\nconst AppContainer = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #f5f5f5;\n`;\n_c2 = AppContainer;\nconst ErrorMessage = styled.div`\n  background-color: #ff6b6b;\n  color: white;\n  padding: 1rem;\n  border-radius: 4px;\n  margin-bottom: 1rem;\n  text-align: center;\n`;\n_c3 = ErrorMessage;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppContainer\");\n$RefreshReg$(_c3, \"ErrorMessage\");","map":{"version":3,"names":["React","useState","useEffect","io","styled","Login","ChatRoom","jsxDEV","_jsxDEV","console","log","process","env","REACT_APP_SOCKET_URL","socket","reconnection","reconnectionAttempts","reconnectionDelay","transports","autoConnect","debug","on","error","App","_s","username","setUsername","loggedIn","setLoggedIn","connectionError","setConnectionError","loginError","setLoginError","isConnected","setIsConnected","connected","id","off","handleLogin","name","password","connect","emit","AppContainer","children","ErrorMessage","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","div","_c2","_c3","$RefreshReg$"],"sources":["D:/real_chat_app/Chat_application/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport styled from 'styled-components';\r\nimport Login from './components/Login';\r\nimport ChatRoom from './components/ChatRoom';\r\n\r\nconsole.log('Attempting to connect to:', process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000');\r\n\r\nconst socket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\r\n  reconnection: true,\r\n  reconnectionAttempts: 5,\r\n  reconnectionDelay: 1000,\r\n  transports: ['websocket', 'polling'],\r\n  autoConnect: true,\r\n  debug: true\r\n});\r\n\r\nsocket.on('error', (error) => {\r\n  console.error('Socket Error:', error);\r\n});\r\n\r\nsocket.on('connect_error', (error) => {\r\n  console.error('Connection Error:', error);\r\n});\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [connectionError, setConnectionError] = useState(false);\r\n  const [loginError, setLoginError] = useState('');\r\n  const [isConnected, setIsConnected] = useState(socket.connected);\r\n\r\n  useEffect(() => {\r\n    console.log('Initial socket state:', {\r\n      connected: socket.connected,\r\n      id: socket.id\r\n    });\r\n\r\n    socket.on('connect', () => {\r\n      console.log('Socket connected:', socket.id);\r\n      setConnectionError(false);\r\n      setIsConnected(true);\r\n    });\r\n\r\n    socket.on('connect_error', (error) => {\r\n      console.error('Connection error:', error);\r\n      setConnectionError(true);\r\n    });\r\n\r\n    socket.on('loginError', (error) => {\r\n      console.log('Login error:', error);\r\n      setLoginError(error);\r\n    });\r\n\r\n    socket.on('loginSuccess', () => {\r\n      console.log('Login successful');\r\n      setLoggedIn(true);\r\n      setLoginError('');\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('Disconnected from server');\r\n      setLoggedIn(false);\r\n      setIsConnected(false);\r\n    });\r\n\r\n    // Initial connection status\r\n    setIsConnected(socket.connected);\r\n\r\n    return () => {\r\n      socket.off('connect');\r\n      socket.off('connect_error');\r\n      socket.off('loginError');\r\n      socket.off('loginSuccess');\r\n      socket.off('disconnect');\r\n    };\r\n  }, []);\r\n\r\n  const handleLogin = (name, password) => {\r\n    console.log('Login attempt:', { name, password });\r\n    console.log('Socket state during login:', {\r\n      connected: socket.connected,\r\n      id: socket.id\r\n    });\r\n    \r\n    if (!socket.connected) {\r\n      console.log('Socket not connected, attempting to connect...');\r\n      socket.connect();\r\n      setLoginError('Connecting to server...');\r\n      return;\r\n    }\r\n\r\n    setUsername(name);\r\n    socket.emit('login', { username: name, password });\r\n  };\r\n\r\n  return (\r\n    <AppContainer>\r\n      {!isConnected && (\r\n        <ErrorMessage>\r\n          Connecting to server...\r\n        </ErrorMessage>\r\n      )}\r\n      {connectionError && (\r\n        <ErrorMessage>\r\n          Unable to connect to chat server. Please try again later.\r\n        </ErrorMessage>\r\n      )}\r\n      {loginError && (\r\n        <ErrorMessage>\r\n          {loginError}\r\n        </ErrorMessage>\r\n      )}\r\n      {!loggedIn ? (\r\n        <Login onLogin={handleLogin} />\r\n      ) : (\r\n        <ChatRoom socket={socket} username={username} />\r\n      )}\r\n    </AppContainer>\r\n  );\r\n}\r\n\r\nconst AppContainer = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  background-color: #ff6b6b;\r\n  color: white;\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n`;\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}