{"ast":null,"code":"var _jsxFileName = \"D:\\\\real_chat_app\\\\Chat_application\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport styled from 'styled-components';\nimport Login from './components/Login';\nimport ChatRoom from './components/ChatRoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\n  reconnection: true,\n  reconnectionAttempts: 5,\n  reconnectionDelay: 1000,\n  transports: ['websocket', 'polling']\n});\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [connectionError, setConnectionError] = useState(false);\n  useEffect(() => {\n    socket.on('connect', () => {\n      setConnectionError(false);\n      console.log('Connected to server');\n    });\n    socket.on('connect_error', error => {\n      console.error('Connection error:', error);\n      setConnectionError(true);\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from server');\n    });\n    return () => {\n      socket.off('connect');\n      socket.off('connect_error');\n      socket.off('disconnect');\n    };\n  }, []);\n  const handleLogin = name => {\n    setUsername(name);\n    setLoggedIn(true);\n    socket.emit('login', name);\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [connectionError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: \"Unable to connect to chat server. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), !loggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ChatRoom, {\n      socket: socket,\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iNBhyJv6zZhSuVQ7KrbDpuZLBQs=\");\n_c = App;\nconst AppContainer = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #f5f5f5;\n`;\n_c2 = AppContainer;\nconst ErrorMessage = styled.div`\n  background-color: #ff6b6b;\n  color: white;\n  padding: 1rem;\n  border-radius: 4px;\n  margin-bottom: 1rem;\n  text-align: center;\n`;\n_c3 = ErrorMessage;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppContainer\");\n$RefreshReg$(_c3, \"ErrorMessage\");","map":{"version":3,"names":["React","useState","useEffect","io","styled","Login","ChatRoom","jsxDEV","_jsxDEV","socket","process","env","REACT_APP_SOCKET_URL","reconnection","reconnectionAttempts","reconnectionDelay","transports","App","_s","username","setUsername","loggedIn","setLoggedIn","connectionError","setConnectionError","on","console","log","error","off","handleLogin","name","emit","AppContainer","children","ErrorMessage","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","div","_c2","_c3","$RefreshReg$"],"sources":["D:/real_chat_app/Chat_application/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport styled from 'styled-components';\r\nimport Login from './components/Login';\r\nimport ChatRoom from './components/ChatRoom';\r\n\r\nconst socket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\r\n  reconnection: true,\r\n  reconnectionAttempts: 5,\r\n  reconnectionDelay: 1000,\r\n  transports: ['websocket', 'polling']\r\n});\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [connectionError, setConnectionError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    socket.on('connect', () => {\r\n      setConnectionError(false);\r\n      console.log('Connected to server');\r\n    });\r\n\r\n    socket.on('connect_error', (error) => {\r\n      console.error('Connection error:', error);\r\n      setConnectionError(true);\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('Disconnected from server');\r\n    });\r\n\r\n    return () => {\r\n      socket.off('connect');\r\n      socket.off('connect_error');\r\n      socket.off('disconnect');\r\n    };\r\n  }, []);\r\n\r\n  const handleLogin = (name) => {\r\n    setUsername(name);\r\n    setLoggedIn(true);\r\n    socket.emit('login', name);\r\n  };\r\n\r\n  return (\r\n    <AppContainer>\r\n      {connectionError && (\r\n        <ErrorMessage>\r\n          Unable to connect to chat server. Please try again later.\r\n        </ErrorMessage>\r\n      )}\r\n      {!loggedIn ? (\r\n        <Login onLogin={handleLogin} />\r\n      ) : (\r\n        <ChatRoom socket={socket} username={username} />\r\n      )}\r\n    </AppContainer>\r\n  );\r\n}\r\n\r\nconst AppContainer = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  background-color: #ff6b6b;\r\n  color: white;\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n`;\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}